<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="6" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-10-07T12:24:11 ICT" name="Regression" finished-at="2022-10-07T12:28:00 ICT" duration-ms="229367">
    <groups>
    </groups>
    <test started-at="2022-10-07T12:24:11 ICT" name="Group 3" finished-at="2022-10-07T12:24:11 ICT" duration-ms="78">
    </test> <!-- Group 3 -->
    <test started-at="2022-10-07T12:24:11 ICT" name="Group 4" finished-at="2022-10-07T12:26:31 ICT" duration-ms="139701">
      <class name="test.global.footer.FooterTest">
        <test-method is-config="true" signature="initBrowserSession(java.lang.String)[pri:0, instance:test.global.footer.FooterTest@2bec854f]" started-at="2022-10-07T12:24:11 ICT" name="initBrowserSession" description="Init browser session" finished-at="2022-10-07T12:24:11 ICT" duration-ms="60" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initBrowserSession -->
        <test-method signature="testFooterCategoryPage()[pri:0, instance:test.global.footer.FooterTest@2bec854f]" started-at="2022-10-07T12:24:11 ICT" name="testFooterCategoryPage" finished-at="2022-10-07T12:26:10 ICT" duration-ms="118878" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Demo taking screenshot When test is failed! ]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Demo taking screenshot When test is failed! 
at org.testng.Assert.fail(Assert.java:110)
at test.global.footer.FooterTest.testFooterCategoryPage(FooterTest.java:16)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:471)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFooterCategoryPage -->
        <test-method is-config="true" signature="captureScreenshot(org.testng.ITestResult)[pri:0, instance:test.global.footer.FooterTest@2bec854f]" started-at="2022-10-07T12:26:10 ICT" name="captureScreenshot" finished-at="2022-10-07T12:26:11 ICT" duration-ms="707" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testFooterCategoryPage status=FAILURE method=FooterTest.testFooterCategoryPage()[pri:0, instance:test.global.footer.FooterTest@2bec854f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshot -->
        <test-method signature="testFooterHomePage()[pri:0, instance:test.global.footer.FooterTest@2bec854f]" started-at="2022-10-07T12:26:11 ICT" name="testFooterHomePage" finished-at="2022-10-07T12:26:14 ICT" duration-ms="3801" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[[ERR] Actal and expected hyper links are different! : Lists differ at element [0]: http://demowebshop.tricentis.com/sitemap != https://demowebshop.tricentis.com/sitemap expected [http://demowebshop.tricentis.com/sitemap] but found [https://demowebshop.tricentis.com/sitemap]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: [ERR] Actal and expected hyper links are different! : Lists differ at element [0]: http://demowebshop.tricentis.com/sitemap != https://demowebshop.tricentis.com/sitemap expected [http://demowebshop.tricentis.com/sitemap] but found [https://demowebshop.tricentis.com/sitemap]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:1479)
at test_flows.global.FooterTestFlow.verifyFooterComponent(FooterTestFlow.java:130)
at test_flows.global.FooterTestFlow.verifyInformationColum(FooterTestFlow.java:48)
at test_flows.global.FooterTestFlow.verifyFooterComponent(FooterTestFlow.java:34)
at test.global.footer.FooterTest.testFooterHomePage(FooterTest.java:27)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:471)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFooterHomePage -->
        <test-method is-config="true" signature="captureScreenshot(org.testng.ITestResult)[pri:0, instance:test.global.footer.FooterTest@2bec854f]" started-at="2022-10-07T12:26:14 ICT" name="captureScreenshot" finished-at="2022-10-07T12:26:15 ICT" duration-ms="567" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testFooterHomePage status=FAILURE method=FooterTest.testFooterHomePage()[pri:0, instance:test.global.footer.FooterTest@2bec854f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshot -->
        <test-method is-config="true" signature="closeBrowserSession()[pri:0, instance:test.global.footer.FooterTest@2bec854f]" started-at="2022-10-07T12:26:15 ICT" name="closeBrowserSession" finished-at="2022-10-07T12:26:31 ICT" duration-ms="15442" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowserSession -->
      </class> <!-- test.global.footer.FooterTest -->
    </test> <!-- Group 4 -->
    <test started-at="2022-10-07T12:24:11 ICT" name="Group 1" finished-at="2022-10-07T12:27:53 ICT" duration-ms="221938">
      <class name="test.computer.BuyingCheapComputerTest">
        <test-method is-config="true" signature="initBrowserSession(java.lang.String)[pri:0, instance:test.computer.BuyingCheapComputerTest@14f232c4]" started-at="2022-10-07T12:24:11 ICT" name="initBrowserSession" description="Init browser session" finished-at="2022-10-07T12:24:11 ICT" duration-ms="51" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initBrowserSession -->
        <test-method signature="testCheapComputerBuying(test_data.computer.ComputerData)[pri:0, instance:test.computer.BuyingCheapComputerTest@14f232c4]" started-at="2022-10-07T12:24:11 ICT" name="testCheapComputerBuying" data-provider="computerData" finished-at="2022-10-07T12:26:56 ICT" duration-ms="164568" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ComputerData{processorType='Fast', ram='8 GB', os='null', hdd='320 GB', software='Image Viever'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheapComputerBuying -->
        <test-method is-config="true" signature="captureScreenshot(org.testng.ITestResult)[pri:0, instance:test.computer.BuyingCheapComputerTest@14f232c4]" started-at="2022-10-07T12:26:56 ICT" name="captureScreenshot" finished-at="2022-10-07T12:26:56 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCheapComputerBuying status=SUCCESS method=BuyingCheapComputerTest.testCheapComputerBuying(test_data.computer.ComputerData)[pri:0, instance:test.computer.BuyingCheapComputerTest@14f232c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshot -->
        <test-method signature="testCheapComputerBuying(test_data.computer.ComputerData)[pri:0, instance:test.computer.BuyingCheapComputerTest@14f232c4]" started-at="2022-10-07T12:26:56 ICT" name="testCheapComputerBuying" data-provider="computerData" finished-at="2022-10-07T12:27:26 ICT" duration-ms="30704" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ComputerData{processorType='Fast', ram='4 GB', os='null', hdd='400 GB', software='Office Suite'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheapComputerBuying -->
        <test-method is-config="true" signature="captureScreenshot(org.testng.ITestResult)[pri:0, instance:test.computer.BuyingCheapComputerTest@14f232c4]" started-at="2022-10-07T12:27:26 ICT" name="captureScreenshot" finished-at="2022-10-07T12:27:26 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCheapComputerBuying status=SUCCESS method=BuyingCheapComputerTest.testCheapComputerBuying(test_data.computer.ComputerData)[pri:0, instance:test.computer.BuyingCheapComputerTest@14f232c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshot -->
        <test-method signature="testCheapComputerBuying(test_data.computer.ComputerData)[pri:0, instance:test.computer.BuyingCheapComputerTest@14f232c4]" started-at="2022-10-07T12:27:26 ICT" name="testCheapComputerBuying" data-provider="computerData" finished-at="2022-10-07T12:27:52 ICT" duration-ms="25508" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ComputerData{processorType='Fast', ram='2 GB', os='null', hdd='320 GB', software='Other Office Suite'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheapComputerBuying -->
        <test-method is-config="true" signature="captureScreenshot(org.testng.ITestResult)[pri:0, instance:test.computer.BuyingCheapComputerTest@14f232c4]" started-at="2022-10-07T12:27:52 ICT" name="captureScreenshot" finished-at="2022-10-07T12:27:52 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCheapComputerBuying status=SUCCESS method=BuyingCheapComputerTest.testCheapComputerBuying(test_data.computer.ComputerData)[pri:0, instance:test.computer.BuyingCheapComputerTest@14f232c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshot -->
        <test-method is-config="true" signature="closeBrowserSession()[pri:0, instance:test.computer.BuyingCheapComputerTest@14f232c4]" started-at="2022-10-07T12:27:52 ICT" name="closeBrowserSession" finished-at="2022-10-07T12:27:53 ICT" duration-ms="806" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowserSession -->
      </class> <!-- test.computer.BuyingCheapComputerTest -->
    </test> <!-- Group 1 -->
    <test started-at="2022-10-07T12:24:11 ICT" name="Group 2" finished-at="2022-10-07T12:28:00 ICT" duration-ms="229366">
      <class name="test.computer.BuyingStandardComputerTest">
        <test-method is-config="true" signature="initBrowserSession(java.lang.String)[pri:0, instance:test.computer.BuyingStandardComputerTest@33f676f6]" started-at="2022-10-07T12:24:11 ICT" name="initBrowserSession" description="Init browser session" finished-at="2022-10-07T12:24:11 ICT" duration-ms="53" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initBrowserSession -->
        <test-method signature="testStandardComputerBuying(test_data.computer.ComputerData)[pri:0, instance:test.computer.BuyingStandardComputerTest@33f676f6]" started-at="2022-10-07T12:24:11 ICT" name="testStandardComputerBuying" data-provider="computerData" finished-at="2022-10-07T12:27:00 ICT" duration-ms="168998" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ComputerData{processorType='2.2GHz', ram='8GB', os='Ubuntu', hdd='400 GB', software='Microsoft Office'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStandardComputerBuying -->
        <test-method is-config="true" signature="captureScreenshot(org.testng.ITestResult)[pri:0, instance:test.computer.BuyingStandardComputerTest@33f676f6]" started-at="2022-10-07T12:27:00 ICT" name="captureScreenshot" finished-at="2022-10-07T12:27:00 ICT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testStandardComputerBuying status=SUCCESS method=BuyingStandardComputerTest.testStandardComputerBuying(test_data.computer.ComputerData)[pri:0, instance:test.computer.BuyingStandardComputerTest@33f676f6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshot -->
        <test-method signature="testStandardComputerBuying(test_data.computer.ComputerData)[pri:0, instance:test.computer.BuyingStandardComputerTest@33f676f6]" started-at="2022-10-07T12:27:00 ICT" name="testStandardComputerBuying" data-provider="computerData" finished-at="2022-10-07T12:27:33 ICT" duration-ms="33350" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ComputerData{processorType='2.5GHz', ram='4GB', os='Windows 7', hdd='320 GB', software='Acrobat Reader'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStandardComputerBuying -->
        <test-method is-config="true" signature="captureScreenshot(org.testng.ITestResult)[pri:0, instance:test.computer.BuyingStandardComputerTest@33f676f6]" started-at="2022-10-07T12:27:33 ICT" name="captureScreenshot" finished-at="2022-10-07T12:27:33 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testStandardComputerBuying status=SUCCESS method=BuyingStandardComputerTest.testStandardComputerBuying(test_data.computer.ComputerData)[pri:0, instance:test.computer.BuyingStandardComputerTest@33f676f6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshot -->
        <test-method signature="testStandardComputerBuying(test_data.computer.ComputerData)[pri:0, instance:test.computer.BuyingStandardComputerTest@33f676f6]" started-at="2022-10-07T12:27:33 ICT" name="testStandardComputerBuying" data-provider="computerData" finished-at="2022-10-07T12:27:59 ICT" duration-ms="26003" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ComputerData{processorType='2.2GHz', ram='2GB', os='Windows 10', hdd='320 GB', software='Total Commander'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStandardComputerBuying -->
        <test-method is-config="true" signature="captureScreenshot(org.testng.ITestResult)[pri:0, instance:test.computer.BuyingStandardComputerTest@33f676f6]" started-at="2022-10-07T12:27:59 ICT" name="captureScreenshot" finished-at="2022-10-07T12:27:59 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testStandardComputerBuying status=SUCCESS method=BuyingStandardComputerTest.testStandardComputerBuying(test_data.computer.ComputerData)[pri:0, instance:test.computer.BuyingStandardComputerTest@33f676f6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshot -->
        <test-method is-config="true" signature="closeBrowserSession()[pri:0, instance:test.computer.BuyingStandardComputerTest@33f676f6]" started-at="2022-10-07T12:27:59 ICT" name="closeBrowserSession" finished-at="2022-10-07T12:28:00 ICT" duration-ms="692" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowserSession -->
      </class> <!-- test.computer.BuyingStandardComputerTest -->
    </test> <!-- Group 2 -->
  </suite> <!-- Regression -->
</testng-results>
